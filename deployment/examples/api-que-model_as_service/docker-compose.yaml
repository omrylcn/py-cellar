# docker-compose.yml
version: '3.8'

services:
  # api:
  #   build: 
  #     context: .
  #     dockerfile: Dockerfile.api
  #   ports:
  #     - "${API_PORT}:${API_PORT}"
  #   env_file:
  #     - .env
  #   volumes:
  #     - ./models:/app/models
  #   depends_on:
  #     - rabbitmq
  #     - redis
  #     - celery-worker
  #   networks:
  #     - model-network

  # celery-worker:
  #   build:
  #     context: .
  #     dockerfile: Dockerfile.worker
  #   env_file:
  #     - .env
  #   volumes:
  #     - ./models:/app/models
  #   depends_on:
  #     - rabbitmq
  #     - redis
  #   networks:
  #     - model-network

  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "${RABBITMQ_PORT}:${RABBITMQ_PORT}"
      - "${RABBITMQ_MANAGEMENT_PORT}:${RABBITMQ_MANAGEMENT_PORT}"
    env_file:
      - .env
    environment:
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_USER}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_PASSWORD}
    networks:
      - model-network
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  redis:
    image: redis:alpine
    command: redis-server --requirepass ${REDIS_PASSWORD}
    ports:
      - "${REDIS_PORT}:${REDIS_PORT}"
    env_file:
      - .env
    networks:
      - model-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

networks:
  model-network:
    driver: bridge