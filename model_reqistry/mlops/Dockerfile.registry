FROM python:3.11.5

# Set the working directory in the container
RUN mkdir /usr/src/app
WORKDIR /usr/src/app

RUN apt-get update && apt-get install -y \
    libgl1-mesa-dev

RUN apt-get install -y poppler-utils libpoppler-cpp-dev
RUN apt-get install -y libgdcm-dev libjpeg-dev

RUN apt-get update && apt-get install -y --no-install-recommends curl ca-certificates

COPY mlops/registry_requirements.txt /usr/src/app/requirements.txt
RUN pip install --no-cache-dir -r requirements.txt

COPY ./registry ./registry
COPY ./config ./config

EXPOSE 8000

CMD ["uvicorn", "registry.app:app" ]


# FROM python:3.11.5

# # Set the working directory in the container
# RUN mkdir /usr/src/app
# WORKDIR /usr/src/app

# RUN apt-get update && apt-get install -y \
#     libgl1-mesa-dev

# RUN apt-get install -y poppler-utils libpoppler-cpp-dev
# RUN apt-get install -y libgdcm-dev libjpeg-dev

# RUN apt-get update && apt-get install -y --no-install-recommends curl ca-certificates

# # Download the latest installer
# ADD https://astral.sh/uv/install.sh /uv-installer.sh

# # Run the installer then remove it
# RUN sh /uv-installer.sh && rm /uv-installer.sh

# # Ensure the installed binary is on the `PATH`
# ENV PATH="/root/.cargo/bin/:$PATH"

# COPY ./registry ./registry
# COPY ./config ./config
# COPY ./uv.lock ./uv.lock
# COPY ./pyproject.toml ./pyproject.toml
# COPY ./.python-version ./.python-version
# COPY ./.env ./.env

# RUN uv venv
# RUN uv  sync 

# EXPOSE 8000

# CMD ["uv", "run", "uvicorn", "registry.api:app" ]

